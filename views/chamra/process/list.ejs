<%- include('../../partials/header.ejs') %>
<!-- Replaced previous large custom CSS block with Bootstrap 5.3 + minimal overrides -->

<style>
  :root{
    --fs-base:15px;
    --fs-table:14px;
    --fs-badge:12px;
  }
  body, .page-wrap{font-size:var(--fs-base);}
  table{font-size:var(--fs-table);}
  .badge{font-size:var(--fs-badge);font-weight:600;}
  thead th{position:sticky;top:0;z-index:5;}
  .edit-row{background:rgba(255,193,7,.15)!important;}
  .dates-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(95px,1fr));gap:.5rem;}
  .dates-grid label{font-size:.65rem;font-weight:600;}
  .dates-grid input{font-size:.7rem;}
</style>

<div class="page-wrap container-fluid py-3">
  <div class="d-flex flex-wrap justify-content-between align-items-center mb-3 gap-2">
    <h1 class="h5 d-flex align-items-center gap-2 m-0">
      <span>รายการ Chamra Process</span>
    </h1>
    <div class="d-flex align-items-center gap-2 flex-wrap">
      <div class="btn-group btn-group-sm" role="group">
        <button type="button" class="btn btn-dark" onclick="adjFont(-1)">A-</button>
        <button type="button" class="btn btn-dark" onclick="adjFont(1)">A+</button>
        <button type="button" class="btn btn-outline-secondary" onclick="resetFont()">รีเซ็ต</button>
      </div>
      <a href="/chamra" class="btn btn-outline-secondary btn-sm">← กลับ</a>
    </div>
  </div>

  <div class="d-flex gap-3 small mb-2">
    <span class="d-inline-flex align-items-center gap-1">
      <span class="badge bg-success"> </span> มีวันที่
    </span>
    <span class="d-inline-flex align-items-center gap-1">
      <span class="badge bg-secondary"> </span> ยังไม่ดำเนินการ
    </span>
  </div>

  <div class="table-responsive">
    <table class="table table-bordered table-sm align-middle">
      <thead class="table-dark text-center">
        <tr>
          <th>รหัส</th>
          <th>S1</th><th>S2</th><th>S3</th><th>S4</th><th>S5</th>
          <th>S6</th><th>S7</th><th>S8</th><th>S9</th><th>S10</th>
          <th>จัดการ</th>
        </tr>
      </thead>
      <tbody>
        <% 
          const isEmptyDate = (v) => {
            if (!v) return true;
            if (typeof v === 'string') {
              if (v === '0000-00-00') return true;
              if (/^1899-11-30/.test(v)) return true;
            }
            if (v instanceof Date) {
              const y = v.getFullYear();
              if (y < 1950) return true;
            }
            return false;
          };
          const normalizeForDisplay = (v) => isEmptyDate(v) ? null : v;
          const formatThai = (v) => {
            const raw = normalizeForDisplay(v);
            if (!raw) return '-';
            const d = raw instanceof Date ? raw : new Date(raw);
            if (isNaN(d.getTime()) || d.getFullYear() < 1950) return '-';
            const months = ['ม.ค.','ก.พ.','มี.ค.','เม.ย.','พ.ค.','มิ.ย.','ก.ค.','ส.ค.','ก.ย.','ต.ค.','พ.ย.','ธ.ค.'];
            return `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear() + 543}`;
          };
          const formatLocalDateInput = (rv) => {
            if (!rv) return '';
            if (typeof rv === 'string') return rv;
            if (rv instanceof Date && !isNaN(rv.getTime())) {
              const y = rv.getFullYear();
              const m = String(rv.getMonth() + 1).padStart(2,'0');
              const d = String(rv.getDate()).padStart(2,'0');
              return `${y}-${m}-${d}`;
            }
            return '';
          };
        %>
        <% processes.forEach(p => { %>
          <tr>
            <td class="fw-semibold text-start">
              <div class="small text-muted fw-normal"><%= p.c_name || '-' %></div>
            </td>
            <% for (let i=1;i<=10;i++){ 
                 const key='pr_s'+i; 
                 const raw = p[key];
                 const showDash = isEmptyDate(raw);
            %>
              <td class="text-center">
                <% if (showDash) { %>
                  <span class="badge bg-secondary">
                   
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                      <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/>  

                  </span>
                <% } else { %>
                  <span class="badge bg-success"><%= formatThai(raw) %></span>
                <% } %>
              </td>
            <% } %>
            <td class="text-center">
              <div class="d-flex justify-content-center gap-1">
                <button type="button" class="btn btn-primary btn-sm" onclick="toggleEdit('<%= p.pr_id %>')">แก้ไข</button>
                <form class="d-inline" method="POST" action="/chamra/process/<%= p.pr_id %>/delete" onsubmit="return confirm('ยืนยันลบรายการนี้?');">
                  <button type="submit" class="btn btn-danger btn-sm">ลบ</button>
                </form>
              </div>
            </td>
          </tr>
          <tr id="edit-row-<%= p.pr_id %>" class="edit-row" style="display:none;">
            <td colspan="12">
              <form method="POST" action="/chamra/process/<%= p.pr_id %>/update" class="border rounded p-3 bg-white">
                <div class="dates-grid mb-2">
                  <% for (let i=1;i<=10;i++){ 
                       const key='pr_s'+i; 
                       const rv = p[key];
                       const inputVal = (!isEmptyDate(rv)) ? formatLocalDateInput(rv) : '';
                  %>
                    <label>S<%= i %>
                      <input type="date" class="form-control form-control-sm" name="pr_s<%= i %>" value="<%= inputVal %>">
                    </label>
                  <% } %>
                </div>
                <div class="d-flex gap-2">
                  <button type="submit" class="btn btn-success btn-sm">บันทึก</button>
                  <button type="button" class="btn btn-secondary btn-sm" onclick="toggleEdit('<%= p.pr_id %>')">ยกเลิก</button>
                </div>
              </form>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
  <div class="text-center mt-3">
    <a href="/chamra" class="btn btn-primary btn-sm">กลับไปยังหน้าหลัก</a>
  </div>
</div>

<script>
function toggleEdit(id){
  const row = document.getElementById('edit-row-'+id);
  if(row){
    const isHidden = row.style.display === 'none';
    document.querySelectorAll('[id^="edit-row-"]').forEach(r => r.style.display='none');
    row.style.display = isHidden ? '' : 'none';
    if(isHidden){
      row.scrollIntoView({behavior:'smooth', block:'center'});
    }
  }
}

const fsState = {
  base: 15,
  table: 14,
  badge: 12
};
function applyFS(){
  document.documentElement.style.setProperty('--fs-base', fsState.base + 'px');
  document.documentElement.style.setProperty('--fs-table', fsState.table + 'px');
  document.documentElement.style.setProperty('--fs-badge', fsState.badge + 'px');
  localStorage.setItem('chamraFS', JSON.stringify(fsState));
}
function adjFont(delta){
  fsState.base = Math.min(20, Math.max(12, fsState.base + delta));
  fsState.table = Math.min(19, Math.max(11, fsState.table + delta));
  fsState.badge = Math.min(17, Math.max(10, fsState.badge + delta));
  applyFS();
}
function resetFont(){
  fsState.base = 15; fsState.table = 14; fsState.badge = 12;
  applyFS();
}
(function initFS(){
  const saved = localStorage.getItem('chamraFS');
  if(saved){
    try{
      const obj = JSON.parse(saved);
      Object.assign(fsState, obj);
    }catch(e){}
  }
  applyFS();
})();
</script>

<%- include('../../partials/footer.ejs') %>
