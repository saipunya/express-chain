const express = require('express');
const router = express.Router();
const line = require('../services/lineService');
const gitgumModel = require('../models/gitgumModel');
const notify = require('../services/notifyService'); // ‡πÅ‡∏Å‡πâ path ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å

// ‡πÉ‡∏ä‡πâ JSON parser ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö webhook ‡∏ô‡∏µ‡πâ
router.post('/webhook/line', express.json(), async (req, res) => {
    const events = req.body?.events || [];

    await Promise.all(
        events.map(async (event) => {
            // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
            async function notifyGitgum() {
                const events = await gitgumModel.findToday();

                if (events.length === 0) {
                    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ');
                    return;
                }

                for (const g of events) {
                    const dateTH = new Intl.DateTimeFormat('th-TH', {
                        day: '2-digit',
                        month: 'short',
                        year: 'numeric'
                    }).format(new Date(g.git_date));

                    const msg = `
üìå <b>${g.git_act}</b>
üóì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${dateTH}

‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ${g.git_time}
üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${g.git_place}
üë• ‡∏ú‡∏π‡πâ‡πÑ‡∏õ: ${g.git_goto || '-'}
‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö: ${g.git_respon || '-'}
                    `;

                    const lineMsg = [
                        `üìå ${g.git_act}`,
                        `üóì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${dateTH}`,
                        '',
                        `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ${g.git_time}`,
                        `üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${g.git_place}`,
                        `üë• ‡∏ú‡∏π‡πâ‡πÑ‡∏õ: ${g.git_goto || '-'}`,
                        `‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö: ${g.git_respon || '-'}`,
                    ].join('\n');

                    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡πà‡∏≤‡∏ô LINE
                    await line.pushText(lineMsg); // ‡πÉ‡∏ä‡πâ pushText

                    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡πà‡∏≤‡∏ô notify (Telegram + LINE)
                    await notify.broadcast({ html: msg, text: lineMsg });

                    console.log('‚úÖ ‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß:', g.git_act);
                }
            }
        })
    );

    res.sendStatus(200);
});

module.exports = router;
