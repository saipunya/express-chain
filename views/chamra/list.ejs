<%- include('../partials/header') %>

<%
  function formatThaiDate(dateStr) {
    if (
      !dateStr ||
      dateStr === '0000-00-00' ||
      dateStr === '0000-00-00 00:00:00' ||
      dateStr === 'Invalid date'
    ) return '-';
    const d = new Date(dateStr);
    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏µ 1899 ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (isNaN(d.getTime()) || d.getFullYear() < 1950) return '-';
    const months = [
      '', '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°', '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
      '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô', '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°'
    ];
    const day = d.getDate();
    const month = months[d.getMonth() + 1];
    const year = d.getFullYear() + 543;
    return `${day} ${month} ${year}`;
  }

  function safeDate(dateStr) {
    if (!dateStr || dateStr === '0000-00-00' || dateStr === '0000-00-00 00:00:00' || dateStr === 'Invalid date') return '';
    return dateStr;
  }
%>

<style>
  .chamra-table-wrapper { position:relative; }
  .chamra-table thead th { vertical-align:middle; }
  .status-pill { font-size:.65rem; letter-spacing:.5px; }
  .latest-step-badge { background:linear-gradient(135deg,#74ebd5,#ACB6E5); font-weight:600; }
  .steps-collapse { font-size:.72rem; line-height:1.15rem; }
  .progress.step-progress { height:6px; border-radius:4px; overflow:hidden; background:#e9ecef; }
  .progress.step-progress .progress-bar { transition:width .4s ease; }
  td .badge + .badge { margin-left:.25rem; }
  .steps-modal-line { font-size:.8rem; border-left:3px solid #0d6efd; padding:.25rem .5rem; margin-bottom:.25rem; background:#f8f9fa; }
  tr[data-latest-step="10"] { background:#eefdf5; }
</style>

<div class="container mt-4">
  <h2 class="mb-4">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</h2>
  <% if(user && (user.mClass === 'admin' || user.mClass === 'kjs')) { %>
    <a href="/chamra/add" class="btn btn-success mb-3">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏° Chamra</a>
    <a href="/chamra/poblem" class="btn btn-warning mb-3">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Chamra</a>
    <a href="/chamra/process" class="btn btn-info mb-3">üìä ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Chamra</a>
    
  <% } %>
  <button id="exportChamraBtn" class="btn btn-outline-primary mb-3">‚¨áÔ∏è Export Chamra</button>

  <!-- Search form: searches by c_name and active_coop name (if provided from join) -->
  <form id="searchForm" class="row g-2 align-items-center mb-3" method="get" action="">
    <div class="col-sm-8 col-md-6">
      <input
        type="search"
        class="form-control"
        id="searchInput"
        name="q"
        value="<%= typeof q !== 'undefined' ? q : '' %>"
        placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤" />
    </div>
    <div class="col-auto">
      <button type="submit" class="btn btn-primary btn-sm">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>
    </div>
    <div class="col-auto">
      <a href="" id="resetSearch" class="btn btn-outline-secondary btn-sm">‡∏•‡πâ‡∏≤‡∏á</a>
    </div>
    <div class="col-12">
      <small id="searchSummary" class="text-muted"></small>
    </div>
  </form>

  <table class="table chamra-table table-hover align-middle mb-0">
    <thead class="table-dark">
      <tr>
        <th>#</th>
        <% if(user && (user.mClass === 'admin' || user.mClass === 'kjs')) { %>
        <th>‡∏£‡∏´‡∏±‡∏™</th>
        <% } %>
        <th>‡∏ä‡∏∑‡πà‡∏≠</th>
       
        <th>‡∏ú‡∏π‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</th>
        <% if(user && user.mClass === 'kjs'){  %>

        <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
        <% } %>
      </tr>
    </thead>
    
    <tbody>
      <% 
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ process)
        const isValidProcessDate = (v) => {
          if(!v) return false;
          if(v === '0000-00-00') return false;
          if(/^1899-11-30/.test(v)) return false;
          const d = new Date(v);
          if(isNaN(d.getTime())) return false;
          if(d.getFullYear() < 1950) return false;
          return true;
        };
      %>
      <% data.forEach((c, index) => { 
          const processDates = [
            c.pr_s1, c.pr_s2, c.pr_s3, c.pr_s4, c.pr_s5,
            c.pr_s6, c.pr_s7, c.pr_s8, c.pr_s9, c.pr_s10
          ];
          // NEW LOGIC: ‡∏´‡∏≤ "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î" ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà valid ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏≠‡∏¥‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ß‡∏•‡∏≤
          let latestStepNumber = 0;
          let latestStepDate = '';
          for (let i = processDates.length - 1; i >= 0; i--) {
            if (isValidProcessDate(processDates[i])) { 
              latestStepNumber = i + 1; 
              latestStepDate = safeDate(processDates[i]);
              break; 
            }
          }
          const totalSteps = 10;
          const percent = Math.round((latestStepNumber / totalSteps) * 100);

          // ‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
          let latestBadgeHtml = '<span class="text-muted small">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô</span>';
          if(latestStepNumber > 0){
            latestBadgeHtml = `
              <span class="badge latest-step-badge text-dark">
                üìà ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà ${latestStepNumber} : ${formatThaiDate(latestStepDate)}
              </span>`;
          }

          function showStep(label, value) {
            if (!isValidProcessDate(value)) return `${label}: -`;
            return `${label}: ${formatThaiDate(safeDate(value))}`;
          }
          const stepLines = processDates.map((d,i)=>showStep('S'+(i+1), d));
      %>
      <tr
        data-latest-step="<%= latestStepNumber %>"
        data-search="<%= [ (c.c_name||''), (c.active_name||c.ac_name||c.coop_name||c.a_name||'') ].join(' ').toLowerCase() %>">
        <td><%= index + 1 %></td>
        <% if(user && (user.mClass === 'admin' || user.mClass === 'kjs')) { %>
        <td><%= c.c_code %></td>
        <% } %>
        <td>
          <div class="fw-semibold"><a href="/chamra/detail/<%= c.c_code %>"><%= c.c_name %></a></div>
          <% if(c.c_status === '‡∏ñ‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠'){ %>
            <span class="badge bg-success status-pill">‡∏ñ‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß</span>
          <% } else { %>
            <span class="badge bg-danger status-pill">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</span>
          <% } %>
          <div class="mt-2"><%- latestBadgeHtml %></div>
          <div class="progress step-progress mt-2" aria-label="Progress">
            <div class="progress-bar bg-success" role="progressbar"
                 style="width: <%= percent %>%"
                 aria-valuenow="<%= percent %>" aria-valuemin="0" aria-valuemax="100"></div>
          </div>
          <small class="text-muted d-block">Progress: ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà <%= latestStepNumber %>/<%= totalSteps %> (<%= percent %>%)</small>
          <button type="button"
                  class="btn btn-sm btn-outline-secondary mt-2 btn-show-steps"
                  data-code="<%= c.c_code %>"
                  data-name="<%= c.c_name %>"
                  data-steps='<%- JSON.stringify(stepLines) %>'>
            ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô
          </button>
        </td>
        
        <td><%= c.de_person %></td>
     
        <% if(user && user.mClass === 'kjs'){  %>
        <td>
          <a href="/chamra/edit/<%= c.c_code %>" class="btn btn-primary btn-sm">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</a>
          <form action="/chamra/delete/<%= c.c_code %>" method="POST" style="display:inline;" onsubmit="return confirm('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö Chamra?');">
            <button type="submit" class="btn btn-danger btn-sm">üóëÔ∏è ‡∏•‡∏ö</button>
          </form>
        </td>
        <% } %>
      </tr>
      <% }) %>
    </tbody>
  </table>
</div>

<div class="modal fade" id="stepsModal" tabindex="-1" aria-labelledby="stepsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-md">
    <div class="modal-content">
      <div class="modal-header py-2">
        <h6 class="modal-title mb-0" id="stepsModalLabel">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô</h6>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="‡∏õ‡∏¥‡∏î"></button>
      </div>
      <div class="modal-body" id="stepsModalBody">
        <!-- filled dynamically -->
      </div>
      <div class="modal-footer py-2">
        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">‡∏õ‡∏¥‡∏î</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Client-side filtering by c_name and active_coop name (if provided)
  document.addEventListener('DOMContentLoaded', () => {
    const input = document.getElementById('searchInput');
    const summary = document.getElementById('searchSummary');
    const rows = Array.from(document.querySelectorAll('.chamra-table tbody tr'));

    // Initialize from URL (?q=)
    const urlQ = new URLSearchParams(location.search).get('q') || '';
    if (input && !input.value) input.value = urlQ;

    const applyFilter = () => {
      const q = (input?.value || '').toLowerCase().trim();
      let visible = 0;
      rows.forEach(row => {
        const hay = row.dataset.search || '';
        const show = !q || hay.includes(q);
        row.style.display = show ? '' : 'none';
        if (show) visible++;
      });
      if (summary) {
        summary.textContent = q
          ? `‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ "${q}" - ‡∏û‡∏ö ${visible} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`
          : `‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${rows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
      }
    };

    applyFilter();
    input?.addEventListener('input', applyFilter);
    document.getElementById('resetSearch')?.addEventListener('click', (e) => {
      e.preventDefault();
      if (input) input.value = '';
      history.replaceState(null, '', location.pathname);
      applyFilter();
    });
  });

  document.addEventListener('click', e => {
    const btn = e.target.closest('.btn-show-steps');
    if (!btn) return;
    let steps = [];
    try { steps = JSON.parse(btn.dataset.steps); } catch {}
    const body = document.getElementById('stepsModalBody');
    body.innerHTML = steps
      .map(s => `<div class="steps-modal-line">${s}</div>`)
      .join('') || '<div class="text-muted small">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>';
    document.getElementById('stepsModalLabel').textContent =
      `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô - ${btn.dataset.code} (${btn.dataset.name})`;
    const modal = new bootstrap.Modal(document.getElementById('stepsModal'));
    modal.show();
  });

  // Export Chamra PDF
  document.getElementById('exportChamraBtn')?.addEventListener('click', async () => {
    const btn = document.getElementById('exportChamraBtn');
    btn.disabled = true;
    btn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å...';
    try {
      // Open in new tab for inline PDF viewing
      const resp = await fetch('/chamra/export/pdf', { method: 'POST' });
      if (!resp.ok) throw new Error('Export failed');
      const blob = await resp.blob();
      const url = URL.createObjectURL(blob);
      window.open(url, '_blank');
      setTimeout(() => URL.revokeObjectURL(url), 60000);
    } catch (e) {
      alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
    } finally {
      btn.disabled = false;
      btn.textContent = '‚¨áÔ∏è Export Chamra';
    }
  });
</script>

<%- include('../partials/footer') %>
